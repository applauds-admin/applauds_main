# Generated by Django 4.1.7 on 2023-03-24 15:19

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="TaggedTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_id",
                    models.UUIDField(db_index=True, verbose_name="object ID"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=1024, verbose_name="Name")),
                ("logo", models.FileField(upload_to="tasks-logo", verbose_name="Logo")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Notify Email",
                    ),
                ),
                (
                    "joined_count",
                    models.BigIntegerField(
                        default=0, editable=False, verbose_name="Joined Count"
                    ),
                ),
                (
                    "owned_count",
                    models.BigIntegerField(
                        default=0, editable=False, verbose_name="Owned Count"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
            ],
            options={
                "verbose_name": "Task",
                "verbose_name_plural": "Tasks",
                "db_table": "task",
                "ordering": ["-created_at", "name"],
            },
        ),
        migrations.CreateModel(
            name="TaskClass",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=64, verbose_name="Name")),
                (
                    "logo",
                    models.FileField(
                        upload_to="task-classes-logo", verbose_name="Logo"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "verification_method",
                    models.CharField(
                        max_length=1024, verbose_name="Verification Method"
                    ),
                ),
                (
                    "site",
                    models.IntegerField(
                        choices=[(0, "Github")],
                        db_index=True,
                        default=0,
                        verbose_name="Site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Task Class",
                "verbose_name_plural": "Task Classes",
                "db_table": "task_class",
            },
        ),
        migrations.CreateModel(
            name="TaskTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="name"),
                ),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        max_length=100,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "db_table": "task_tag",
            },
        ),
        migrations.CreateModel(
            name="TaskUser",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("owned", models.BooleanField(default=False, verbose_name="Owned")),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tasks.task"
                    ),
                ),
            ],
            options={
                "verbose_name": "Task User",
                "verbose_name_plural": "Task Users",
                "db_table": "task_user",
                "ordering": ["-created_at", "owned"],
            },
        ),
    ]
